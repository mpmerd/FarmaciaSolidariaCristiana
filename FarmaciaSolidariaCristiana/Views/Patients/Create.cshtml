@model FarmaciaSolidariaCristiana.Models.Patient

@{
    ViewData["Title"] = "Nuevo Paciente";
}

<div class="container mt-4">
    <h2>
        <i class="bi bi-person-plus-fill"></i> Nueva Ficha de Paciente
    </h2>
    <hr />

    <form asp-action="Create" method="post" enctype="multipart/form-data" id="patientForm">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

        <!-- 1. DATOS DEL PACIENTE -->
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">1. Datos del Paciente</h5>
            </div>
            <div class="card-body">
                <!-- CARNET O PASAPORTE PRIMERO -->
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <label asp-for="IdentificationDocument" class="form-label">
                            Carnet de Identidad o Pasaporte <span class="text-danger">*</span>
                        </label>
                        <input asp-for="IdentificationDocument" 
                               id="patientIdentification"
                               class="form-control" 
                               placeholder="11 dígitos para CI o letra + 6-7 dígitos para pasaporte" 
                               required />
                        <span asp-validation-for="IdentificationDocument" class="text-danger"></span>
                        <div id="identificationFeedback" class="mt-2"></div>
                    </div>
                </div>

                <!-- Área para mostrar datos del paciente existente -->
                <div id="existingPatientInfo" class="alert alert-info" style="display: none;">
                    <h6><i class="bi bi-info-circle"></i> Paciente ya registrado</h6>
                    <p id="existingPatientDetails"></p>
                    <div id="existingPatientDeliveries"></div>
                    <button type="button" id="editExistingPatient" class="btn btn-sm btn-warning">
                        <i class="bi bi-pencil"></i> Editar Ficha Existente
                    </button>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="FullName" class="form-label">Nombre Completo <span class="text-danger">*</span></label>
                        <input asp-for="FullName" class="form-control" required />
                        <span asp-validation-for="FullName" class="text-danger"></span>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label asp-for="Age" class="form-label">Edad <span class="text-danger">*</span></label>
                        <input asp-for="Age" class="form-control" type="number" min="0" max="150" required />
                        <span asp-validation-for="Age" class="text-danger"></span>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label asp-for="Gender" class="form-label">Género <span class="text-danger">*</span></label>
                        <select asp-for="Gender" class="form-select" required>
                            <option value="">Seleccione...</option>
                            <option value="M">Masculino</option>
                            <option value="F">Femenino</option>
                        </select>
                        <span asp-validation-for="Gender" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Phone" class="form-label">Teléfono</label>
                        <input asp-for="Phone" class="form-control" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label asp-for="Municipality" class="form-label">Municipio</label>
                        <input asp-for="Municipality" class="form-control" />
                        <span asp-validation-for="Municipality" class="text-danger"></span>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label asp-for="Province" class="form-label">Provincia</label>
                        <input asp-for="Province" class="form-control" />
                        <span asp-validation-for="Province" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- 2. DATOS CLÍNICOS -->
        <div class="card mb-4">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">2. Datos Clínicos</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label asp-for="MainDiagnosis" class="form-label">Diagnóstico Principal</label>
                    <textarea asp-for="MainDiagnosis" class="form-control" rows="2"></textarea>
                    <span asp-validation-for="MainDiagnosis" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="AssociatedPathologies" class="form-label">Patologías Asociadas</label>
                    <textarea asp-for="AssociatedPathologies" class="form-control" rows="2"></textarea>
                    <span asp-validation-for="AssociatedPathologies" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="KnownAllergies" class="form-label">Alergias Conocidas</label>
                    <textarea asp-for="KnownAllergies" class="form-control" rows="2"></textarea>
                    <span asp-validation-for="KnownAllergies" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CurrentTreatments" class="form-label">Tratamientos Actuales</label>
                    <textarea asp-for="CurrentTreatments" class="form-control" rows="2"></textarea>
                    <span asp-validation-for="CurrentTreatments" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- 3. DATOS VITALES -->
        <div class="card mb-4">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">3. Datos Vitales</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label class="form-label">Presión Arterial (mmHg)</label>
                        <div class="input-group">
                            <input asp-for="BloodPressureSystolic" class="form-control" placeholder="Sistólica" type="number" min="0" max="300" />
                            <span class="input-group-text">/</span>
                            <input asp-for="BloodPressureDiastolic" class="form-control" placeholder="Diastólica" type="number" min="0" max="200" />
                        </div>
                        <small class="form-text text-muted">Ejemplo: 120/80</small>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label asp-for="Weight" class="form-label">Peso (kg)</label>
                        <input asp-for="Weight" class="form-control" type="number" step="0.01" min="0" max="999.99" />
                        <span asp-validation-for="Weight" class="text-danger"></span>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label asp-for="Height" class="form-label">Altura (cm)</label>
                        <input asp-for="Height" class="form-control" type="number" step="0.01" min="0" max="999.99" />
                        <span asp-validation-for="Height" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- 4. DOCUMENTOS -->
        <div class="card mb-4">
            <div class="card-header bg-warning">
                <h5 class="mb-0">4. Documentos (Fotos)</h5>
            </div>
            <div class="card-body">
                <p class="text-muted">Puede subir fotos de recetas médicas, tarjetón sanitario, o cualquier otro documento relevante.</p>
                <div id="documentFields">
                    <div class="document-row mb-3">
                        <div class="row">
                            <div class="col-md-4">
                                <label class="form-label">Tipo de Documento</label>
                                <select name="documentTypes" class="form-select">
                                    <option value="Receta Médica">Receta Médica</option>
                                    <option value="Tarjetón Sanitario">Tarjetón Sanitario</option>
                                    <option value="Tratamiento">Tratamiento</option>
                                    <option value="Informe Médico">Informe Médico</option>
                                    <option value="Otro">Otro</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Archivo (Foto)</label>
                                <input type="file" name="documents" class="form-control" accept="image/*,.pdf" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Descripción</label>
                                <input type="text" name="documentDescriptions" class="form-control" placeholder="Opcional" />
                            </div>
                        </div>
                    </div>
                </div>
                <button type="button" id="addDocumentBtn" class="btn btn-sm btn-secondary">
                    <i class="bi bi-plus-circle"></i> Agregar Otro Documento
                </button>
            </div>
        </div>

        <!-- 5. OBSERVACIONES -->
        <div class="card mb-4">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0">5. Observaciones</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label asp-for="Observations" class="form-label">Observaciones Generales</label>
                    <textarea asp-for="Observations" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="Observations" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="d-grid gap-2 d-md-flex justify-content-md-end mb-4">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-x-circle"></i> Cancelar
            </a>
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-save"></i> Guardar Paciente
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Búsqueda automática de paciente por identificación
        let searchTimeout;
        const identificationInput = document.getElementById('patientIdentification');
        const feedbackDiv = document.getElementById('identificationFeedback');
        const existingPatientInfo = document.getElementById('existingPatientInfo');
        const existingPatientDetails = document.getElementById('existingPatientDetails');
        const existingPatientDeliveries = document.getElementById('existingPatientDeliveries');

        // Variable para rastrear si el paciente existe
        let patientExists = false;

        // Función para deshabilitar todos los campos del formulario
        function disableFormFields() {
            patientExists = true; // Marcar que el paciente existe
            
            console.log('Deshabilitando campos del formulario...');
            
            const form = document.getElementById('patientForm');
            if (!form) {
                console.error('Formulario no encontrado');
                return;
            }
            
            // Deshabilitar inputs de texto
            const textInputs = form.querySelectorAll('input[type="text"]:not(#patientIdentification), input[type="date"], input[type="email"], input[type="tel"]');
            console.log('Text inputs encontrados:', textInputs.length);
            textInputs.forEach(input => {
                input.disabled = true;
                input.style.backgroundColor = '#e9ecef';
                input.style.cursor = 'not-allowed';
            });
            
            // Deshabilitar textareas
            const textareas = form.querySelectorAll('textarea');
            console.log('Textareas encontrados:', textareas.length);
            textareas.forEach(textarea => {
                textarea.disabled = true;
                textarea.style.backgroundColor = '#e9ecef';
                textarea.style.cursor = 'not-allowed';
            });
            
            // Deshabilitar selects
            const selects = form.querySelectorAll('select');
            console.log('Selects encontrados:', selects.length);
            selects.forEach(select => {
                select.disabled = true;
                select.style.backgroundColor = '#e9ecef';
                select.style.cursor = 'not-allowed';
            });
            
            // Deshabilitar inputs de archivo
            const fileInputs = form.querySelectorAll('input[type="file"]');
            console.log('File inputs encontrados:', fileInputs.length);
            fileInputs.forEach(input => {
                input.disabled = true;
            });

            // Deshabilitar botones de guardar y agregar documentos
            const submitBtn = form.querySelector('button[type="submit"]');
            const addDocBtn = document.getElementById('addDocumentBtn');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.style.cursor = 'not-allowed';
                submitBtn.style.opacity = '0.6';
                console.log('Botón submit deshabilitado');
            }
            if (addDocBtn) {
                addDocBtn.disabled = true;
                addDocBtn.style.cursor = 'not-allowed';
                addDocBtn.style.opacity = '0.6';
                console.log('Botón addDoc deshabilitado');
            }
            
            console.log('Campos deshabilitados completamente');
        }

        // Función para habilitar todos los campos del formulario
        function enableFormFields() {
            patientExists = false; // Marcar que el paciente NO existe
            
            console.log('Habilitando campos del formulario...');
            
            const form = document.getElementById('patientForm');
            if (!form) return;
            
            // Habilitar inputs de texto
            const textInputs = form.querySelectorAll('input[type="text"]:not(#patientIdentification), input[type="date"], input[type="email"], input[type="tel"]');
            textInputs.forEach(input => {
                input.disabled = false;
                input.style.backgroundColor = '';
                input.style.cursor = '';
            });
            
            // Habilitar textareas
            const textareas = form.querySelectorAll('textarea');
            textareas.forEach(textarea => {
                textarea.disabled = false;
                textarea.style.backgroundColor = '';
                textarea.style.cursor = '';
            });
            
            // Habilitar selects
            const selects = form.querySelectorAll('select');
            selects.forEach(select => {
                select.disabled = false;
                select.style.backgroundColor = '';
                select.style.cursor = '';
            });
            
            // Habilitar inputs de archivo
            const fileInputs = form.querySelectorAll('input[type="file"]');
            fileInputs.forEach(input => {
                input.disabled = false;
            });

            // Habilitar botones
            const submitBtn = form.querySelector('button[type="submit"]');
            const addDocBtn = document.getElementById('addDocumentBtn');
            if (submitBtn) {
                submitBtn.disabled = false;
                submitBtn.style.cursor = '';
                submitBtn.style.opacity = '';
            }
            if (addDocBtn) {
                addDocBtn.disabled = false;
                addDocBtn.style.cursor = '';
                addDocBtn.style.opacity = '';
            }
            
            console.log('Campos habilitados completamente');
        }

        // Prevenir submit del formulario si el paciente ya existe
        document.getElementById('patientForm').addEventListener('submit', function(e) {
            if (patientExists) {
                e.preventDefault();
                alert('Este paciente ya está registrado. Use el botón "Editar Ficha Existente" para modificar sus datos.');
                return false;
            }
        });

        identificationInput.addEventListener('blur', function() {
            const identification = this.value.trim();
            
            if (identification.length === 0) {
                feedbackDiv.innerHTML = '';
                existingPatientInfo.style.display = 'none';
                return;
            }

            // Validar formato
            const ciPattern = /^\d{11}$/;
            const passportPattern = /^[A-Za-z]\d{6,7}$/;
            
            if (!ciPattern.test(identification) && !passportPattern.test(identification)) {
                feedbackDiv.innerHTML = '<div class="alert alert-warning"><i class="bi bi-exclamation-triangle"></i> Formato inválido. Use 11 dígitos para CI o letra + 6-7 dígitos para pasaporte.</div>';
                existingPatientInfo.style.display = 'none';
                return;
            }

            // Buscar paciente
            feedbackDiv.innerHTML = '<div class="spinner-border spinner-border-sm text-primary"></div> Buscando paciente...';
            
            fetch(`/Patients/SearchByIdentification?identification=${encodeURIComponent(identification)}`)
                .then(response => response.json())
                .then(data => {
                    if (data.exists) {
                        // Mostrar información del paciente existente
                        existingPatientDetails.innerHTML = `
                            <strong>Nombre:</strong> ${data.fullName}<br>
                            <strong>Edad:</strong> ${data.age} años<br>
                            <strong>Registrado:</strong> ${new Date(data.registrationDate).toLocaleDateString('es-ES')}
                        `;

                        // Mostrar historial de entregas
                        if (data.deliveries && data.deliveries.length > 0) {
                            let deliveriesHtml = '<h6 class="mt-3"><i class="bi bi-box-seam"></i> Historial de Entregas:</h6><ul class="list-group list-group-sm">';
                            data.deliveries.forEach(delivery => {
                                deliveriesHtml += `
                                    <li class="list-group-item">
                                        <strong>${delivery.medicineName}</strong> - 
                                        Cantidad: ${delivery.quantity} - 
                                        Fecha: ${new Date(delivery.deliveryDate).toLocaleDateString('es-ES')}
                                    </li>
                                `;
                            });
                            deliveriesHtml += '</ul>';
                            existingPatientDeliveries.innerHTML = deliveriesHtml;
                        } else {
                            existingPatientDeliveries.innerHTML = '<p class="text-muted mt-2">Sin entregas registradas</p>';
                        }

                        existingPatientInfo.style.display = 'block';
                        feedbackDiv.innerHTML = '';

                        // DESHABILITAR TODOS LOS CAMPOS DEL FORMULARIO
                        disableFormFields();

                        // Configurar botón de edición
                        document.getElementById('editExistingPatient').onclick = function() {
                            window.location.href = `/Patients/Edit/${data.id}`;
                        };
                    } else {
                        feedbackDiv.innerHTML = '<div class="alert alert-success"><i class="bi bi-check-circle"></i> Identificación válida. Paciente nuevo.</div>';
                        existingPatientInfo.style.display = 'none';
                        
                        // HABILITAR TODOS LOS CAMPOS DEL FORMULARIO
                        enableFormFields();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    feedbackDiv.innerHTML = '<div class="alert alert-danger"><i class="bi bi-x-circle"></i> Error al buscar paciente.</div>';
                    existingPatientInfo.style.display = 'none';
                });
        });

        // Agregar documentos dinámicamente
        document.getElementById('addDocumentBtn').addEventListener('click', function() {
            const documentFields = document.getElementById('documentFields');
            const newRow = document.createElement('div');
            newRow.className = 'document-row mb-3';
            newRow.innerHTML = `
                <div class="row">
                    <div class="col-md-4">
                        <label class="form-label">Tipo de Documento</label>
                        <select name="documentTypes" class="form-select">
                            <option value="Receta Médica">Receta Médica</option>
                            <option value="Tarjetón Sanitario">Tarjetón Sanitario</option>
                            <option value="Tratamiento">Tratamiento</option>
                            <option value="Informe Médico">Informe Médico</option>
                            <option value="Otro">Otro</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Archivo (Foto)</label>
                        <input type="file" name="documents" class="form-control" accept="image/*,.pdf" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Descripción</label>
                        <div class="input-group">
                            <input type="text" name="documentDescriptions" class="form-control" placeholder="Opcional" />
                            <button type="button" class="btn btn-danger remove-document-btn">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            documentFields.appendChild(newRow);

            // Add event listener for the remove button
            newRow.querySelector('.remove-document-btn').addEventListener('click', function() {
                newRow.remove();
            });
        });
    </script>
}
